/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>


&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

&mmv {
   time-to-max-speed-ms = <680>;
   acceleration-exponent=<2>;
};
/ { 

	combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
		combo_del {
			timeout-ms = <50>;
			key-positions = <8 9>;
			bindings = <&kp DEL>;
		}
        };
	};

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Y &kp C &kp L &kp M &kp K 						&kp Z &kp F  &kp U    &td MINUS COMMA  &kp BKSP 
		&kp I &kp S &hm LALT R &hm LGUI T &kp G 			&kp P &hm RGUI N &hm RALT E &kp A &kp O
		&kp Q &kp V &kp W &kp D &kp J				        &kp B &kp H  &td UNDERSCORE SLASH &td EXCL DOT &kp X
          				&mt LC(LS(LALT)) SPC &sk LSHIFT  				&sk RCTRL &to 1
		>;
		};

       		left_layer {
		bindings = <
		&kp ESC  &kp ATSN   &td LG(LS(S)) HASH &kp DLLR    &kp PRCNT		&kp CARET &kp AMPS &kp STAR &kp SEMI &kp BKSP 
		&kp TAB    &kp EQUAL    &kp LESS_THAN   &kp GREATER_THAN &kp SQT 		&kp BSLH &kp LBRC  &kp RBRC &kp PIPE  &kp ENTER
		&kp TILDE    &kp PLUS 	&to 4 &kp QMARK  &kp DQT 	&kp LBKT &kp LPRN &kp RPRN &kp RBKT  &to 3 
					    &to 0  &sk LSHIFT  					&sk RALT &to 2 
		>;
		};
		
		right_layer {
		bindings = <
		&kp F10  &kp F7 &kp F8  &kp F9  &kp UNDERSCORE 			&kp MINUS  &kp N7  &kp N8  &kp N9 &trans
		&kp F11  &kp F4 &kp F5  &kp F6  &td STAR PLUS 			&kp EQUAL  &kp N4  &kp N5  &kp N6   &kp ENTER
		&kp F12  &kp F1 &kp F2  &kp F3  &kp DOT    				&kp N0	   &kp N1  &kp N2  &kp N3  &trans 
						&to 0 &sk LGUI  						&sk RALT  &to 2  
		>;
		};
		
		tri_layer {
		bindings = <
		&td HOME PG_UP &mwh SCROLL_LEFT  &mmv MOVE_UP  &mwh SCROLL_RIGHT  &kp LG(RCTRL(D))		&kp RALT(LEFT)   &kp LC(LS(TAB))   &kp LC(TAB) &kp LALT(RIGHT) &trans
		&td LG(TAB) TAB &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &kp LG(RCTRL(RIGHT))  		&kp LEFT &kp DOWN  &kp UP &kp RIGHT &kp ENTER 
		&td END PG_DN &mkp RCLK  &mwh SCROLL_UP &mwh SCROLL_DOWN &kp LG(RCTRL(LEFT))				&mkp LCLK &kp DEL  &kp INS  &trans &trans   
					 &to 0 &kp LSHIFTbg           					&sk RALT &to 1 
		>;
		};	
		bt {
		bindings = <
		&trans  &trans &trans &trans &trans &trans &trans &trans &trans &trans 
		&trans  &trans &trans &trans &trans &trans &trans &trans &trans &trans 
		&bt BT_PRV  &bt BT_NXT &bt BT_CLR &trans &trans   				&trans &trans  &trans  &trans &trans   
					 &to 0 &trans  					&trans &to 1 
		>;		
		};	
        
	};
};
